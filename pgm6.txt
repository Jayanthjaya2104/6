#include <stdio.h>
#define MAX 5
char queue[MAX];
int front = 0, rear = -1, count = 0; 
void insertQ(char item) {
 if(count == MAX) {
 printf("Queue Overflow!\n");
 return;
 }
 rear = (rear + 1) % MAX;
 queue[rear] = item;
 count++;
 printf("Inserted: %c\n", item);
}
char deleteQ() {
 if(count == 0) {
 printf("Queue Underflow!\n");
 return '\0'; 
 }
 char item = queue[front];
 front = (front + 1) % MAX;
 count--;
 return item;
}
void display() {
 if(count == 0) {
 printf("Queue is empty!\n");
 return;
 }
 printf("Queue contents: ");
 int i, f = front;
 for(i = 0; i < count; i++) {
 printf("%c ", queue[f]);
 f = (f + 1) % MAX;
 }
 printf("\n");
}
int main() {
 int choice;
 char item;
 printf("\nCircular Queue Operations:\n");
 printf("1. Insert an Element\n");
 printf("2. Delete an Element\n");
 printf("3. Display Queue Status\n");
 printf("4. Exit\n");
 while(1) {
 printf("Enter your choice: ");
 scanf("%d", &choice);
switch(choice) {
 case 1:
 printf("Enter a character to insert: ");
 scanf(" %c", &item); 
 insertQ(item);
 break;
 case 2:
 item = deleteQ();
 if(item != '\0') {
 printf("Deleted: %c\n", item);
}
 break;
 case 3:
 display();
 break;
 case 4:
 printf("Exiting...\n");
 return 0;
 default:
 printf("Invalid choice! Please try again.\n");
}
}
}